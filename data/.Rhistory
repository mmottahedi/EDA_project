install.packages("xlsx")
library(xlsx)
install.packages("xlsx")
install.packages("rJava")
install.packages("rjavax")
install.packages("rjavax")
install.packages("rJavax")
install.packages("rJava")
install.packages("xlsx")
library("Biobase", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
install.packages("ISLR")
install.packages("httr")
install.packages("httpuv")
install.packages("XML")
source('~/.active-rstudio-document')
train
(( mpg - predict ( lm . fit , Auto ) )
mpg - predict ( lm . fit , Auto )
library(ISLR)
set.seed(1)
train=sample(392,196)
lm . fit = lm ( mpg∼horsepower , data = Auto , subset = train )
attach ( Auto )
mpg - predict ( lm . fit , Auto )
mpg - predict ( lm.fit , Auto )
library(ISLR)
set.seed(1)
train=sample(392,196)
lm.fit = lm ( mpg∼horsepower , data = Auto , subset = train )
attach ( Auto )
mpg - predict ( lm.fit , Auto )
mpg - predict( lm.fit , Auto )
head(Auto)
predict( lm.fit , Auto )
predict(lm.fit,Auto)
?predict
predict(lm.fit)
lm.fit
summary(lm.fit)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
summary(fit)
mean (( mpg - predict ( lm  , Auto ) ) [ - train ]^2)
source('~/.active-rstudio-document')
mpg - predict ( lm  , Auto )
predict(fit)
source('~/.active-rstudio-document')
predict(fit,Auto)
mpg-predict(fit)
mpg-predict(fit,Auto)
mean(mpg-predict(fit,Auto))
mean(mpg-predict(fit,Auto))[-train]
mean(mpg-predict(fit,Auto)[-train]^2)
mean((mpg-predict(fit,Auto))[-train]^2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library ( boot )
glm.fit = glm( mpg~horsepower , data = Auto )
cv.err = cv.glm( Auto , glm.fit )
cv.err$delta
source('~/.active-rstudio-document')
library ( boot )
glm.fit = glm( mpg~horsepower , data = Auto )
cv.err = cv.glm( Auto , glm.fit,10 )
cv.err$delta
require(ISLR)
data(Portfolio)
head(Portfolio)
Portfolio[1]
Portfolio[2]
Portfolio[1]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
alpha(Portfolio)
sample(Portfolio,10)
?sample
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
install.packages(boot)
install.packages("boot")
install.packages("boot")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
alpha(Portfolio)
head(Portfolio)
source('~/.active-rstudio-document')
alpha(Portfolio,1:100)
data[1:100]
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
alpha(Portfolio,1:10)
boot(Portfolio,alpha)
boot(Portfolio,alpha,100)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
boot(Portfolio,alpha,R=50)
source('~/.active-rstudio-document')
boo
boot(Portfolio,alpha,R=10000)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
summary(bb)
bb
print(bb)
source('~/.active-rstudio-document')
boot.parallel()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
func <- function(x,y){}
func <- function(x,y){
z = x + y
}
func( 10, 2)
func <- function(x,y){
return( x+y)
{}
}
func(1,2)
head(Portfolio)
Portfolio[1:10,]
print(bb)
require(ISLR)
require(boot)
data(Portfolio)
data(Auto)
head(Auto)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
summary(lm(mpg~displacement, data=Auto))
summary (lm(mpg~displacement, data=Auto))
source('~/.active-rstudio-document')
summary (lm(mpg~displacement, data=Auto))
source('~/.active-rstudio-document')
head(Hitters)
head(Hitters,100)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
names(Hitters)
lm(Salary~Walks,data=Hitters,na.action = na.omit)
require(leaps)
install.packages("leaps")
?leaps
require(leaps)
?leaps
x<-matrix(rnorm(100),ncol=4)
y<-rnorm(25)
leaps(x,y)
ss=leaps(x,y)
ss$Cp
plot(ss$Cp)
source('~/.active-rstudio-document')
library(lattice)
library(nlme
)
xyplot(weight ~ Time | Diet, BodyWeight)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
airquality = transform(airquality, Month = factor(Month))
library(datasets)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
source('~/.active-rstudio-document')
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(datasets)
data(airquality)
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
source('~/.active-rstudio-document')
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
source('~/cwd/EDA/plot2.R')
savePlot("plot2.png")
plot(total$year,total$pol,main = "plot2",type= "b")
abline(lm.fit,col='red')
plot(total$year,total$pol,main = "plot2",type= "b")
abline(lm.fit,col='red')
savePlot("plot2.png")
source('~/cwd/EDA/plot2.R')
source('~/cwd/EDA/plot1.R')
source('~/.active-rstudio-document')
